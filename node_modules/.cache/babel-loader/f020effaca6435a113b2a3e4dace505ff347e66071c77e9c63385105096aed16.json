{"ast":null,"code":"var _jsxFileName = \"C:\\\\Seguridad\\\\p-final\\\\front\\\\src\\\\pages\\\\Logs.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport { useNavigate } from 'react-router-dom';\nimport { Bar } from 'react-chartjs-2';\nimport { Chart as ChartJS, CategoryScale, LinearScale, BarElement, Title, Tooltip, Legend } from 'chart.js';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nChartJS.register(CategoryScale, LinearScale, BarElement, Title, Tooltip, Legend);\nconst Logs = () => {\n  _s();\n  const navigate = useNavigate();\n  const [logs, setLogs] = useState([]);\n  const [chartData, setChartData] = useState(null);\n  const [responseTimeData, setResponseTimeData] = useState(null);\n  const [dailyChartData, setDailyChartData] = useState(null); // Nuevo estado para los datos diarios\n\n  useEffect(() => {\n    axios.get(\"http://localhost:5001/getServer\").then(response => {\n      if (response.data.logs && response.data.logs.length > 0) {\n        setLogs(response.data.logs);\n        procesarDatos(response.data.logs);\n        procesarTiemposRespuesta(response.data.logs);\n        procesarDatosPorFecha(response.data.logs);\n        procesarDatosPorMethod(response.data.logs);\n      }\n    }).catch(error => console.error(\"Error obteniendo logs: \", error));\n  }, []);\n  const procesarDatos = logs => {\n    let cantidadServidor1_info = 0;\n    let cantidadServidor1_warn = 0;\n    let cantidadServidor1_error = 0;\n    let cantidadServidor2_info = 0;\n    let cantidadServidor2_warn = 0;\n    let cantidadServidor2_error = 0;\n    logs.forEach(log => {\n      if (log.server === 1) {\n        if ([200, 201, 204].includes(log.status)) cantidadServidor1_info++;else if ([300, 301, 302].includes(log.status)) cantidadServidor1_warn++;else if (log.status >= 400) cantidadServidor1_error++;\n      }\n      if (log.server === 2) {\n        if ([200, 201, 204].includes(log.status)) cantidadServidor2_info++;else if ([300, 301, 302].includes(log.status)) cantidadServidor2_warn++;else if (log.status >= 400) cantidadServidor2_error++;\n      }\n    });\n    const labels = [\"Servidor 1\", \"Servidor 2\"];\n    const valoresInfo = [cantidadServidor1_info, cantidadServidor2_info];\n    const valoresWarn = [cantidadServidor1_warn, cantidadServidor2_warn];\n    const valoresError = [cantidadServidor1_error, cantidadServidor2_error];\n    setChartData({\n      labels,\n      datasets: [{\n        label: \"Info\",\n        data: valoresInfo,\n        backgroundColor: \"rgba(54, 162, 235, 0.5)\",\n        borderColor: \"rgba(54, 162, 235, 1)\",\n        borderWidth: 1\n      }, {\n        label: \"Warn\",\n        data: valoresWarn,\n        backgroundColor: \"rgba(255, 159, 64, 0.5)\",\n        borderColor: \"rgba(255, 159, 64, 1)\",\n        borderWidth: 1\n      }, {\n        label: \"Error\",\n        data: valoresError,\n        backgroundColor: \"rgba(255, 99, 132, 0.5)\",\n        borderColor: \"rgba(255, 99, 132, 1)\",\n        borderWidth: 1\n      }]\n    });\n  };\n  const procesarTiemposRespuesta = logs => {\n    let servidor1_fast = 0;\n    let servidor1_medium = 0;\n    let servidor1_slow = 0;\n    let servidor2_fast = 0;\n    let servidor2_medium = 0;\n    let servidor2_slow = 0;\n    logs.forEach(log => {\n      if (log.server === 1) {\n        if (log.responseTime < 200) servidor1_fast++;else if (log.responseTime >= 200 && log.responseTime <= 500) servidor1_medium++;else servidor1_slow++;\n      }\n      if (log.server === 2) {\n        if (log.responseTime < 200) servidor2_fast++;else if (log.responseTime >= 200 && log.responseTime <= 500) servidor2_medium++;else servidor2_slow++;\n      }\n    });\n    const labels = [\"Servidor 1\", \"Servidor 2\"];\n    const fastData = [servidor1_fast, servidor2_fast];\n    const mediumData = [servidor1_medium, servidor2_medium];\n    const slowData = [servidor1_slow, servidor2_slow];\n    setResponseTimeData({\n      labels,\n      datasets: [{\n        label: \"Rápido (<200ms)\",\n        data: fastData,\n        backgroundColor: \"rgba(75, 192, 192, 0.5)\",\n        borderColor: \"rgba(75, 192, 192, 1)\",\n        borderWidth: 1\n      }, {\n        label: \"Medio (200-500ms)\",\n        data: mediumData,\n        backgroundColor: \"rgba(255, 205, 86, 0.5)\",\n        borderColor: \"rgba(255, 205, 86, 1)\",\n        borderWidth: 1\n      }, {\n        label: \"Lento (>500ms)\",\n        data: slowData,\n        backgroundColor: \"rgba(255, 99, 132, 0.5)\",\n        borderColor: \"rgba(255, 99, 132, 1)\",\n        borderWidth: 1\n      }]\n    });\n  };\n  const procesarDatosPorFecha = logs => {\n    const server1Days = {};\n    const server2Days = {};\n    logs.forEach(log => {\n      if (log.timestamp && log.timestamp._seconds && log.timestamp._nanoseconds) {\n        const date = new Date(log.timestamp._seconds * 1000 + log.timestamp._nanoseconds / 1000000);\n        const dateString = date.toISOString().split('T')[0];\n        if (log.server === 1) {\n          server1Days[dateString] = (server1Days[dateString] || 0) + 1;\n        } else if (log.server === 2) {\n          server2Days[dateString] = (server2Days[dateString] || 0) + 1;\n        }\n      } else {\n        console.warn(\"Registro con timestamp inválido:\", log);\n      }\n    });\n    const allDates = [...new Set([...Object.keys(server1Days), ...Object.keys(server2Days)])].sort();\n    const valoresServidor1 = allDates.map(date => server1Days[date] || 0);\n    const valoresServidor2 = allDates.map(date => server2Days[date] || 0);\n    setDailyChartData({\n      // Actualiza el estado correcto\n      labels: allDates,\n      datasets: [{\n        label: \"Servidor 1\",\n        data: valoresServidor1,\n        backgroundColor: \"rgba(54, 162, 235, 0.5)\",\n        borderColor: \"rgba(54, 162, 235, 1)\",\n        borderWidth: 1\n      }, {\n        label: \"Servidor 2\",\n        data: valoresServidor2,\n        backgroundColor: \"rgba(255, 159, 64, 0.5)\",\n        borderColor: \"rgba(255, 159, 64, 1)\",\n        borderWidth: 1\n      }]\n    });\n  };\n  const procesarDatosPorMethod = logs => {\n    let cantidadServidor1_POST = 0;\n    let cantidadServidor1_GET = 0;\n    let cantidadServidor2_POST = 0;\n    let cantidadServidor2_GET = 0;\n    logs.forEach(log => {\n      if (log.server === 1) {\n        if ('POST'.includes(log.method)) cantidadServidor1_POST++;else if ('GET'.includes(log.method)) cantidadServidor1_GET++;\n      }\n      if (log.server === 2) {\n        if ('POST'.includes(log.method)) cantidadServidor2_POST++;else if ('GET'.includes(log.method)) cantidadServidor2_GET++;\n      }\n    });\n    const labels = [\"Servidor 1\", \"Servidor 2\"];\n    const valoresPOST = [cantidadServidor1_POST, cantidadServidor2_POST];\n    const valoresGET = [cantidadServidor1_GET, cantidadServidor2_GET];\n    setChartData({\n      labels,\n      datasets: [{\n        label: \"Info\",\n        data: valoresInfo,\n        backgroundColor: \"rgba(54, 162, 235, 0.5)\",\n        borderColor: \"rgba(54, 162, 235, 1)\",\n        borderWidth: 1\n      }, {\n        label: \"Warn\",\n        data: valoresWarn,\n        backgroundColor: \"rgba(255, 159, 64, 0.5)\",\n        borderColor: \"rgba(255, 159, 64, 1)\",\n        borderWidth: 1\n      }, {\n        label: \"Error\",\n        data: valoresError,\n        backgroundColor: \"rgba(255, 99, 132, 0.5)\",\n        borderColor: \"rgba(255, 99, 132, 1)\",\n        borderWidth: 1\n      }]\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container mt-4\",\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      className: \"text-center\",\n      children: \"Logs\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 171,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"card p-3\",\n      children: chartData ? /*#__PURE__*/_jsxDEV(Bar, {\n        data: chartData,\n        options: {\n          responsive: true,\n          plugins: {\n            legend: {\n              position: 'top'\n            }\n          }\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 173,\n        columnNumber: 30\n      }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Cargando datos...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 173,\n        columnNumber: 130\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 172,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"card p-3 mt-4\",\n      children: responseTimeData ? /*#__PURE__*/_jsxDEV(Bar, {\n        data: responseTimeData,\n        options: {\n          responsive: true,\n          plugins: {\n            legend: {\n              position: 'top'\n            }\n          }\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 176,\n        columnNumber: 37\n      }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Cargando datos...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 176,\n        columnNumber: 144\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 175,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"card p-3 mt-4\",\n      children: dailyChartData ? /*#__PURE__*/_jsxDEV(Bar, {\n        data: dailyChartData,\n        options: {\n          responsive: true,\n          plugins: {\n            legend: {\n              position: 'top'\n            }\n          },\n          scales: {\n            x: {\n              title: {\n                display: true,\n                text: 'Fecha'\n              }\n            },\n            y: {\n              title: {\n                display: true,\n                text: 'Número de Logs'\n              }\n            }\n          }\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 180,\n        columnNumber: 21\n      }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Cargando datos...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 191,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 178,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"text-center mt-3\",\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"btn btn-warning\",\n        onClick: () => navigate('/home'),\n        children: \"Ver Home\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 194,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 193,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 170,\n    columnNumber: 9\n  }, this);\n};\n_s(Logs, \"ZxPvWSlyIiRyizqwhyRu2eGvkZ8=\", false, function () {\n  return [useNavigate];\n});\n_c = Logs;\nexport default Logs;\nvar _c;\n$RefreshReg$(_c, \"Logs\");","map":{"version":3,"names":["React","useState","useEffect","axios","useNavigate","Bar","Chart","ChartJS","CategoryScale","LinearScale","BarElement","Title","Tooltip","Legend","jsxDEV","_jsxDEV","register","Logs","_s","navigate","logs","setLogs","chartData","setChartData","responseTimeData","setResponseTimeData","dailyChartData","setDailyChartData","get","then","response","data","length","procesarDatos","procesarTiemposRespuesta","procesarDatosPorFecha","procesarDatosPorMethod","catch","error","console","cantidadServidor1_info","cantidadServidor1_warn","cantidadServidor1_error","cantidadServidor2_info","cantidadServidor2_warn","cantidadServidor2_error","forEach","log","server","includes","status","labels","valoresInfo","valoresWarn","valoresError","datasets","label","backgroundColor","borderColor","borderWidth","servidor1_fast","servidor1_medium","servidor1_slow","servidor2_fast","servidor2_medium","servidor2_slow","responseTime","fastData","mediumData","slowData","server1Days","server2Days","timestamp","_seconds","_nanoseconds","date","Date","dateString","toISOString","split","warn","allDates","Set","Object","keys","sort","valoresServidor1","map","valoresServidor2","cantidadServidor1_POST","cantidadServidor1_GET","cantidadServidor2_POST","cantidadServidor2_GET","method","valoresPOST","valoresGET","className","children","fileName","_jsxFileName","lineNumber","columnNumber","options","responsive","plugins","legend","position","scales","x","title","display","text","y","onClick","_c","$RefreshReg$"],"sources":["C:/Seguridad/p-final/front/src/pages/Logs.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { Bar } from 'react-chartjs-2';\r\nimport { Chart as ChartJS, CategoryScale, LinearScale, BarElement, Title, Tooltip, Legend } from 'chart.js';\r\n\r\nChartJS.register(CategoryScale, LinearScale, BarElement, Title, Tooltip, Legend);\r\n\r\nconst Logs = () => {\r\n    const navigate = useNavigate();\r\n    const [logs, setLogs] = useState([]);\r\n    const [chartData, setChartData] = useState(null);\r\n    const [responseTimeData, setResponseTimeData] = useState(null);\r\n    const [dailyChartData, setDailyChartData] = useState(null); // Nuevo estado para los datos diarios\r\n\r\n    useEffect(() => {\r\n        axios.get(\"http://localhost:5001/getServer\")\r\n            .then(response => {\r\n                if (response.data.logs && response.data.logs.length > 0) {\r\n                    setLogs(response.data.logs);\r\n                    procesarDatos(response.data.logs);\r\n                    procesarTiemposRespuesta(response.data.logs);\r\n                    procesarDatosPorFecha(response.data.logs);  \r\n                    procesarDatosPorMethod(response.data.logs);\r\n                }\r\n            })\r\n            .catch(error => console.error(\"Error obteniendo logs: \", error));\r\n    }, []);\r\n\r\n    const procesarDatos = (logs) => {\r\n        let cantidadServidor1_info = 0;\r\n        let cantidadServidor1_warn = 0;\r\n        let cantidadServidor1_error = 0;\r\n\r\n        let cantidadServidor2_info = 0;\r\n        let cantidadServidor2_warn = 0;\r\n        let cantidadServidor2_error = 0;\r\n\r\n        logs.forEach(log => {\r\n            if (log.server === 1) {\r\n                if ([200, 201, 204].includes(log.status)) cantidadServidor1_info++;\r\n                else if ([300, 301, 302].includes(log.status)) cantidadServidor1_warn++;\r\n                else if (log.status >= 400) cantidadServidor1_error++;\r\n            }\r\n            if (log.server === 2) {\r\n                if ([200, 201, 204].includes(log.status)) cantidadServidor2_info++;\r\n                else if ([300, 301, 302].includes(log.status)) cantidadServidor2_warn++;\r\n                else if (log.status >= 400) cantidadServidor2_error++;\r\n            }\r\n        });\r\n\r\n        const labels = [\"Servidor 1\", \"Servidor 2\"];\r\n        const valoresInfo = [cantidadServidor1_info, cantidadServidor2_info];\r\n        const valoresWarn = [cantidadServidor1_warn, cantidadServidor2_warn];\r\n        const valoresError = [cantidadServidor1_error, cantidadServidor2_error];\r\n\r\n        setChartData({\r\n            labels,\r\n            datasets: [\r\n                { label: \"Info\", data: valoresInfo, backgroundColor: \"rgba(54, 162, 235, 0.5)\", borderColor: \"rgba(54, 162, 235, 1)\", borderWidth: 1 },\r\n                { label: \"Warn\", data: valoresWarn, backgroundColor: \"rgba(255, 159, 64, 0.5)\", borderColor: \"rgba(255, 159, 64, 1)\", borderWidth: 1 },\r\n                { label: \"Error\", data: valoresError, backgroundColor: \"rgba(255, 99, 132, 0.5)\", borderColor: \"rgba(255, 99, 132, 1)\", borderWidth: 1 }\r\n            ]\r\n        });\r\n    };\r\n\r\n    const procesarTiemposRespuesta = (logs) => {\r\n        let servidor1_fast = 0;\r\n        let servidor1_medium = 0;\r\n        let servidor1_slow = 0;\r\n\r\n        let servidor2_fast = 0;\r\n        let servidor2_medium = 0;\r\n        let servidor2_slow = 0;\r\n\r\n        logs.forEach(log => {\r\n            if (log.server === 1) {\r\n                if (log.responseTime < 200) servidor1_fast++;\r\n                else if (log.responseTime >= 200 && log.responseTime <= 500) servidor1_medium++;\r\n                else servidor1_slow++;\r\n            }\r\n            if (log.server === 2) {\r\n                if (log.responseTime < 200) servidor2_fast++;\r\n                else if (log.responseTime >= 200 && log.responseTime <= 500) servidor2_medium++;\r\n                else servidor2_slow++;\r\n            }\r\n        });\r\n\r\n        const labels = [\"Servidor 1\", \"Servidor 2\"];\r\n        const fastData = [servidor1_fast, servidor2_fast];\r\n        const mediumData = [servidor1_medium, servidor2_medium];\r\n        const slowData = [servidor1_slow, servidor2_slow];\r\n\r\n        setResponseTimeData({\r\n            labels,\r\n            datasets: [\r\n                { label: \"Rápido (<200ms)\", data: fastData, backgroundColor: \"rgba(75, 192, 192, 0.5)\", borderColor: \"rgba(75, 192, 192, 1)\", borderWidth: 1 },\r\n                { label: \"Medio (200-500ms)\", data: mediumData, backgroundColor: \"rgba(255, 205, 86, 0.5)\", borderColor: \"rgba(255, 205, 86, 1)\", borderWidth: 1 },\r\n                { label: \"Lento (>500ms)\", data: slowData, backgroundColor: \"rgba(255, 99, 132, 0.5)\", borderColor: \"rgba(255, 99, 132, 1)\", borderWidth: 1 }\r\n            ]\r\n        });\r\n    };\r\n\r\n    const procesarDatosPorFecha = (logs) => {\r\n        const server1Days = {};\r\n        const server2Days = {};\r\n\r\n        logs.forEach(log => {\r\n            if (log.timestamp && log.timestamp._seconds && log.timestamp._nanoseconds) {\r\n                const date = new Date(log.timestamp._seconds * 1000 + log.timestamp._nanoseconds / 1000000);\r\n                const dateString = date.toISOString().split('T')[0];\r\n\r\n                if (log.server === 1) {\r\n                    server1Days[dateString] = (server1Days[dateString] || 0) + 1;\r\n                } else if (log.server === 2) {\r\n                    server2Days[dateString] = (server2Days[dateString] || 0) + 1;\r\n                }\r\n            } else {\r\n                console.warn(\"Registro con timestamp inválido:\", log);\r\n            }\r\n        });\r\n\r\n        const allDates = [...new Set([...Object.keys(server1Days), ...Object.keys(server2Days)])].sort();\r\n        const valoresServidor1 = allDates.map(date => server1Days[date] || 0);\r\n        const valoresServidor2 = allDates.map(date => server2Days[date] || 0);\r\n\r\n        setDailyChartData({ // Actualiza el estado correcto\r\n            labels: allDates,\r\n            datasets: [\r\n                { label: \"Servidor 1\", data: valoresServidor1, backgroundColor: \"rgba(54, 162, 235, 0.5)\", borderColor: \"rgba(54, 162, 235, 1)\", borderWidth: 1 },\r\n                { label: \"Servidor 2\", data: valoresServidor2, backgroundColor: \"rgba(255, 159, 64, 0.5)\", borderColor: \"rgba(255, 159, 64, 1)\", borderWidth: 1 }\r\n            ]\r\n        });\r\n    };\r\n\r\n    const procesarDatosPorMethod = (logs) => {\r\n        let cantidadServidor1_POST = 0;\r\n        let cantidadServidor1_GET = 0; \r\n\r\n        let cantidadServidor2_POST = 0;\r\n        let cantidadServidor2_GET = 0; \r\n\r\n        logs.forEach(log => {\r\n            if (log.server === 1) {\r\n                if ('POST'.includes(log.method)) cantidadServidor1_POST++;\r\n                else if ('GET'.includes(log.method)) cantidadServidor1_GET++; \r\n            }\r\n            if (log.server === 2) {\r\n                if ('POST'.includes(log.method)) cantidadServidor2_POST++;\r\n                else if ('GET'.includes(log.method)) cantidadServidor2_GET++; \r\n            }\r\n        });\r\n\r\n        const labels = [\"Servidor 1\", \"Servidor 2\"];\r\n        const valoresPOST = [cantidadServidor1_POST, cantidadServidor2_POST];\r\n        const valoresGET = [cantidadServidor1_GET, cantidadServidor2_GET]; \r\n\r\n        setChartData({\r\n            labels,\r\n            datasets: [\r\n                { label: \"Info\", data: valoresInfo, backgroundColor: \"rgba(54, 162, 235, 0.5)\", borderColor: \"rgba(54, 162, 235, 1)\", borderWidth: 1 },\r\n                { label: \"Warn\", data: valoresWarn, backgroundColor: \"rgba(255, 159, 64, 0.5)\", borderColor: \"rgba(255, 159, 64, 1)\", borderWidth: 1 },\r\n                { label: \"Error\", data: valoresError, backgroundColor: \"rgba(255, 99, 132, 0.5)\", borderColor: \"rgba(255, 99, 132, 1)\", borderWidth: 1 }\r\n            ]\r\n        });\r\n    };\r\n\r\n    return (\r\n        <div className=\"container mt-4\">\r\n            <h3 className=\"text-center\">Logs</h3>\r\n            <div className=\"card p-3\">\r\n                {chartData ? <Bar data={chartData} options={{ responsive: true, plugins: { legend: { position: 'top' } } }} /> : <p>Cargando datos...</p>}\r\n            </div>\r\n            <div className=\"card p-3 mt-4\">\r\n                {responseTimeData ? <Bar data={responseTimeData} options={{ responsive: true, plugins: { legend: { position: 'top' } } }} /> : <p>Cargando datos...</p>}\r\n            </div>\r\n            <div className=\"card p-3 mt-4\">\r\n                {dailyChartData ? (\r\n                    <Bar\r\n                        data={dailyChartData}\r\n                        options={{\r\n                            responsive: true,\r\n                            plugins: { legend: { position: 'top' } },\r\n                            scales: {\r\n                                x: { title: { display: true, text: 'Fecha' } },\r\n                                y: { title: { display: true, text: 'Número de Logs' } }\r\n                            }\r\n                        }}\r\n                    />\r\n                ) : <p>Cargando datos...</p>}\r\n            </div>\r\n            <div className=\"text-center mt-3\">\r\n                <button className=\"btn btn-warning\" onClick={() => navigate('/home')}>Ver Home</button>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Logs;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}