{"ast":null,"code":"var _jsxFileName = \"C:\\\\Seguridad\\\\p-final\\\\front\\\\src\\\\Login.jsx\",\n  _s = $RefreshSig$();\nimport { React, useState } from \"react\";\nimport axios from \"axios\";\nimport { QRCodeSVG } from \"qrcode.react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Login = () => {\n  _s();\n  const [email, setEmail] = useState(\"\");\n  const [username, setUsername] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [secretUrl, setSecretUrl] = useState(\"\");\n  const [otp, setOtp] = useState(\"\");\n  const [step, setStep] = useState(\"\");\n  const handleRegister = async e => {\n    e.preventDefault();\n    const res = await axios.post(\"http://localhost:5001/api/register\", {\n      email,\n      username,\n      password\n    });\n    setSecretUrl(res.data.secret);\n    setStep(\"qr\");\n    setEmail(\"\");\n    setPassword(\"\");\n    setUsername(\"\");\n  };\n  const handleLogin = async e => {\n    e.preventDefault();\n    const res = await axios.post(\"http://localhost:3001/login\", {\n      email,\n      password\n    });\n    if (res.data.requiresMFA) setStep(\"otp\");\n  };\n  const verifyOTP = async e => {\n    e.preventDefault();\n    const res = await axios.post(\"http://localhost:3001/verify-otp\", {\n      email,\n      token: otp\n    });\n    alert(res.data.success ? \"Autenticado!\" : \"Código invalido\");\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [step === \"login\" && /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleLogin,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"email\",\n        placeholder: \"Email\",\n        value: email,\n        onChange: e => setEmail(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"username\",\n        placeholder: \"Username\",\n        value: email,\n        onChange: e => setUsername(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"password\",\n        placeholder: \"Password\",\n        value: password,\n        onChange: e => setPassword(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Login\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onChange: handleRegister,\n        children: \"Registrar\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 13\n    }, this), step === \"qr\" && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(QRCodeSVG, {\n        value: secretUrl\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Escanea este QR con Google Authenticator\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => setStep(\"login\"),\n        children: \"Regresar\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 13\n    }, this), step === \"otp\" && /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: verifyOTP,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"C\\xF3digo OTP\",\n        value: otp,\n        onChange: e => setOtp(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Verificar\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 9\n  }, this);\n};\n_s(Login, \"E5Hd8GNS2CWCvEJkw5bELOum1VA=\");\n_c = Login;\nexport default Login;\nvar _c;\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"names":["React","useState","axios","QRCodeSVG","jsxDEV","_jsxDEV","Login","_s","email","setEmail","username","setUsername","password","setPassword","secretUrl","setSecretUrl","otp","setOtp","step","setStep","handleRegister","e","preventDefault","res","post","data","secret","handleLogin","requiresMFA","verifyOTP","token","alert","success","children","onSubmit","type","placeholder","value","onChange","target","fileName","_jsxFileName","lineNumber","columnNumber","onClick","_c","$RefreshReg$"],"sources":["C:/Seguridad/p-final/front/src/Login.jsx"],"sourcesContent":["import {React , useState} from \"react\";\r\nimport axios from \"axios\";\r\nimport { QRCodeSVG } from \"qrcode.react\";\r\n\r\nconst Login = () => {\r\n    const [email, setEmail ] = useState(\"\");\r\n    const [username, setUsername ] = useState(\"\");\r\n    const [password, setPassword ] = useState(\"\");\r\n    const [secretUrl, setSecretUrl] = useState(\"\");\r\n    const [otp, setOtp] = useState(\"\");\r\n    const [step, setStep ] = useState(\"\");\r\n\r\n    const handleRegister = async (e) => {\r\n        e.preventDefault();\r\n        const res = await axios.post(\"http://localhost:5001/api/register\", {\r\n            email,\r\n            username,\r\n            password,\r\n        });\r\n        setSecretUrl(res.data.secret);\r\n        setStep(\"qr\");\r\n        setEmail(\"\"); \r\n        setPassword(\"\");\r\n        setUsername(\"\");\r\n    };\r\n\r\n    const handleLogin = async (e) => {\r\n        e.preventDefault();\r\n        const res = await axios.post(\"http://localhost:3001/login\", {\r\n            email,\r\n            password,\r\n        });\r\n        if (res.data.requiresMFA) setStep(\"otp\");\r\n    };\r\n\r\n    const verifyOTP = async (e) => {\r\n        e.preventDefault();\r\n        const res = await axios.post(\"http://localhost:3001/verify-otp\", {\r\n            email,\r\n            token: otp,\r\n        });\r\n        alert(res.data.success ? \"Autenticado!\" : \"Código invalido\");\r\n    };\r\n\r\n    return (\r\n        <div>\r\n         {step === \"login\" && (\r\n            <form onSubmit={handleLogin}>\r\n                <input \r\n                    type=\"email\"\r\n                    placeholder=\"Email\"\r\n                    value={email}\r\n                    onChange={(e) => setEmail(e.target.value)} \r\n                />\r\n                <input \r\n                    type=\"username\"\r\n                    placeholder=\"Username\"\r\n                    value={email}\r\n                    onChange={(e) => setUsername(e.target.value)} \r\n                />\r\n                <input \r\n                    type=\"password\"\r\n                    placeholder=\"Password\"\r\n                    value={password}\r\n                    onChange={(e) => setPassword(e.target.value)} \r\n                />\r\n\r\n                <button type=\"submit\">Login</button>\r\n                <button onChange={handleRegister}>Registrar</button>\r\n            </form>\r\n         ) }\r\n\r\n         {step === \"qr\" && (\r\n            <div>\r\n                <QRCodeSVG value = {secretUrl} />\r\n                <p>Escanea este QR con Google Authenticator</p>\r\n                <button onClick={() => setStep(\"login\")}>Regresar</button>\r\n            </div>\r\n         )}\r\n\r\n         {step === \"otp\" && (\r\n            <form onSubmit={verifyOTP}>\r\n                <input \r\n                 type=\"text\" \r\n                 placeholder=\"Código OTP\"\r\n                 value={otp}\r\n                 onChange={(e) => setOtp(e.target.value)}\r\n                />\r\n                <button type=\"submit\">Verificar</button>\r\n            </form>\r\n         )}\r\n\r\n\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Login;"],"mappings":";;AAAA,SAAQA,KAAK,EAAGC,QAAQ,QAAO,OAAO;AACtC,OAAOC,KAAK,MAAM,OAAO;AACzB,SAASC,SAAS,QAAQ,cAAc;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEzC,MAAMC,KAAK,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAChB,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAE,GAAGR,QAAQ,CAAC,EAAE,CAAC;EACvC,MAAM,CAACS,QAAQ,EAAEC,WAAW,CAAE,GAAGV,QAAQ,CAAC,EAAE,CAAC;EAC7C,MAAM,CAACW,QAAQ,EAAEC,WAAW,CAAE,GAAGZ,QAAQ,CAAC,EAAE,CAAC;EAC7C,MAAM,CAACa,SAAS,EAAEC,YAAY,CAAC,GAAGd,QAAQ,CAAC,EAAE,CAAC;EAC9C,MAAM,CAACe,GAAG,EAAEC,MAAM,CAAC,GAAGhB,QAAQ,CAAC,EAAE,CAAC;EAClC,MAAM,CAACiB,IAAI,EAAEC,OAAO,CAAE,GAAGlB,QAAQ,CAAC,EAAE,CAAC;EAErC,MAAMmB,cAAc,GAAG,MAAOC,CAAC,IAAK;IAChCA,CAAC,CAACC,cAAc,CAAC,CAAC;IAClB,MAAMC,GAAG,GAAG,MAAMrB,KAAK,CAACsB,IAAI,CAAC,oCAAoC,EAAE;MAC/DhB,KAAK;MACLE,QAAQ;MACRE;IACJ,CAAC,CAAC;IACFG,YAAY,CAACQ,GAAG,CAACE,IAAI,CAACC,MAAM,CAAC;IAC7BP,OAAO,CAAC,IAAI,CAAC;IACbV,QAAQ,CAAC,EAAE,CAAC;IACZI,WAAW,CAAC,EAAE,CAAC;IACfF,WAAW,CAAC,EAAE,CAAC;EACnB,CAAC;EAED,MAAMgB,WAAW,GAAG,MAAON,CAAC,IAAK;IAC7BA,CAAC,CAACC,cAAc,CAAC,CAAC;IAClB,MAAMC,GAAG,GAAG,MAAMrB,KAAK,CAACsB,IAAI,CAAC,6BAA6B,EAAE;MACxDhB,KAAK;MACLI;IACJ,CAAC,CAAC;IACF,IAAIW,GAAG,CAACE,IAAI,CAACG,WAAW,EAAET,OAAO,CAAC,KAAK,CAAC;EAC5C,CAAC;EAED,MAAMU,SAAS,GAAG,MAAOR,CAAC,IAAK;IAC3BA,CAAC,CAACC,cAAc,CAAC,CAAC;IAClB,MAAMC,GAAG,GAAG,MAAMrB,KAAK,CAACsB,IAAI,CAAC,kCAAkC,EAAE;MAC7DhB,KAAK;MACLsB,KAAK,EAAEd;IACX,CAAC,CAAC;IACFe,KAAK,CAACR,GAAG,CAACE,IAAI,CAACO,OAAO,GAAG,cAAc,GAAG,iBAAiB,CAAC;EAChE,CAAC;EAED,oBACI3B,OAAA;IAAA4B,QAAA,GACEf,IAAI,KAAK,OAAO,iBACdb,OAAA;MAAM6B,QAAQ,EAAEP,WAAY;MAAAM,QAAA,gBACxB5B,OAAA;QACI8B,IAAI,EAAC,OAAO;QACZC,WAAW,EAAC,OAAO;QACnBC,KAAK,EAAE7B,KAAM;QACb8B,QAAQ,EAAGjB,CAAC,IAAKZ,QAAQ,CAACY,CAAC,CAACkB,MAAM,CAACF,KAAK;MAAE;QAAAG,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC7C,CAAC,eACFtC,OAAA;QACI8B,IAAI,EAAC,UAAU;QACfC,WAAW,EAAC,UAAU;QACtBC,KAAK,EAAE7B,KAAM;QACb8B,QAAQ,EAAGjB,CAAC,IAAKV,WAAW,CAACU,CAAC,CAACkB,MAAM,CAACF,KAAK;MAAE;QAAAG,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAChD,CAAC,eACFtC,OAAA;QACI8B,IAAI,EAAC,UAAU;QACfC,WAAW,EAAC,UAAU;QACtBC,KAAK,EAAEzB,QAAS;QAChB0B,QAAQ,EAAGjB,CAAC,IAAKR,WAAW,CAACQ,CAAC,CAACkB,MAAM,CAACF,KAAK;MAAE;QAAAG,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAChD,CAAC,eAEFtC,OAAA;QAAQ8B,IAAI,EAAC,QAAQ;QAAAF,QAAA,EAAC;MAAK;QAAAO,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC,eACpCtC,OAAA;QAAQiC,QAAQ,EAAElB,cAAe;QAAAa,QAAA,EAAC;MAAS;QAAAO,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAClD,CACR,EAEAzB,IAAI,KAAK,IAAI,iBACXb,OAAA;MAAA4B,QAAA,gBACI5B,OAAA,CAACF,SAAS;QAACkC,KAAK,EAAIvB;MAAU;QAAA0B,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eACjCtC,OAAA;QAAA4B,QAAA,EAAG;MAAwC;QAAAO,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAG,CAAC,eAC/CtC,OAAA;QAAQuC,OAAO,EAAEA,CAAA,KAAMzB,OAAO,CAAC,OAAO,CAAE;QAAAc,QAAA,EAAC;MAAQ;QAAAO,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACzD,CACP,EAEAzB,IAAI,KAAK,KAAK,iBACZb,OAAA;MAAM6B,QAAQ,EAAEL,SAAU;MAAAI,QAAA,gBACtB5B,OAAA;QACC8B,IAAI,EAAC,MAAM;QACXC,WAAW,EAAC,eAAY;QACxBC,KAAK,EAAErB,GAAI;QACXsB,QAAQ,EAAGjB,CAAC,IAAKJ,MAAM,CAACI,CAAC,CAACkB,MAAM,CAACF,KAAK;MAAE;QAAAG,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACxC,CAAC,eACFtC,OAAA;QAAQ8B,IAAI,EAAC,QAAQ;QAAAF,QAAA,EAAC;MAAS;QAAAO,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACtC,CACR;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAGG,CAAC;AAEd,CAAC;AAACpC,EAAA,CA3FID,KAAK;AAAAuC,EAAA,GAALvC,KAAK;AA6FX,eAAeA,KAAK;AAAC,IAAAuC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}