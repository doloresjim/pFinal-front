{"ast":null,"code":"var _jsxFileName = \"C:\\\\Seguridad\\\\p-final\\\\front\\\\src\\\\pages\\\\Logs.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport { useNavigate } from 'react-router-dom';\nimport { Bar } from 'react-chartjs-2';\nimport { Chart as ChartJS, CategoryScale, LinearScale, BarElement, Title, Tooltip, Legend } from 'chart.js';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nChartJS.register(CategoryScale, LinearScale, BarElement, Title, Tooltip, Legend);\nconst Logs = () => {\n  _s();\n  const navigate = useNavigate();\n  const [logs, setLogs] = useState([]);\n  const [chartData, setChartData] = useState(null);\n  useEffect(() => {\n    axios.get(\"http://localhost:5001/getServer\").then(response => {\n      if (response.data.logs && response.data.logs.length > 0) {\n        setLogs(response.data.logs);\n        procesarDatos(response.data.logs);\n      }\n    }).catch(error => console.error(\"Error obteniendo logs: \", error));\n  }, []);\n  console.log(logs);\n  const procesarDatos = logs => {\n    // Contadores por servidor y categoría\n    let cantidadServidor1_info = 0;\n    let cantidadServidor1_warn = 0;\n    let cantidadServidor1_error = 0;\n    let cantidadServidor2_info = 0;\n    let cantidadServidor2_warn = 0;\n    let cantidadServidor2_error = 0;\n\n    // Filtramos y clasificamos los logs según su status\n    logs.forEach(log => {\n      if (log.server === \"1\" || log.server === 1) {\n        if ([200, 201, 204].includes(log.status)) cantidadServidor1_info++;else if ([300, 301, 302].includes(log.status)) cantidadServidor1_warn++;else if (log.status >= 400) cantidadServidor1_error++;\n      }\n      if (log.server === \"2\" || log.server === 2) {\n        if ([200, 201, 204].includes(log.status)) cantidadServidor2_info++;else if ([300, 301, 302].includes(log.status)) cantidadServidor2_warn++;else if (log.status >= 400) cantidadServidor2_error++;\n      }\n    });\n\n    // Mostrar en consola\n    console.log(\"Logs Servidor 1 (info):\", cantidadServidor1_info);\n    console.log(\"Logs Servidor 1 (warn):\", cantidadServidor1_warn);\n    console.log(\"Logs Servidor 1 (error):\", cantidadServidor1_error);\n    console.log(\"Logs Servidor 2 (info):\", cantidadServidor2_info);\n    console.log(\"Logs Servidor 2 (warn):\", cantidadServidor2_warn);\n    console.log(\"Logs Servidor 2 (error):\", cantidadServidor2_error);\n\n    // Configurar los datos de la gráfica\n    const labels = [\"Servidor 1\", \"Servidor 2\"];\n    const valoresInfo = [cantidadServidor1_info, cantidadServidor2_info]; // Logs info\n    const valoresWarn = [cantidadServidor1_warn, cantidadServidor2_warn]; // Logs warn\n    const valoresError = [cantidadServidor1_error, cantidadServidor2_error]; // Logs error\n\n    setChartData({\n      labels,\n      datasets: [{\n        label: \"Éxito (info)\",\n        data: valoresInfo,\n        backgroundColor: \"rgba(54, 162, 235, 0.5)\",\n        // Azul\n        borderColor: \"rgba(54, 162, 235, 1)\",\n        borderWidth: 1\n      }, {\n        label: \"Redirección (warn)\",\n        data: valoresWarn,\n        backgroundColor: \"rgba(255, 159, 64, 0.5)\",\n        // Naranja\n        borderColor: \"rgba(255, 159, 64, 1)\",\n        borderWidth: 1\n      }, {\n        label: \"Errores (error)\",\n        data: valoresError,\n        backgroundColor: \"rgba(255, 99, 132, 0.5)\",\n        // Rojo\n        borderColor: \"rgba(255, 99, 132, 1)\",\n        borderWidth: 1\n      }]\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container mt-4\",\n    style: {\n      marginTop: '50px',\n      marginBottom: '60px'\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      className: \"text-center\",\n      children: \"Logs\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"card p-3\",\n      children: chartData ? /*#__PURE__*/_jsxDEV(Bar, {\n        data: chartData,\n        options: {\n          responsive: true,\n          plugins: {\n            legend: {\n              position: 'top'\n            }\n          }\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 21\n      }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Cargando datos...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"btn btn-warning mt-3\",\n      type: \"button\",\n      onClick: () => navigate('/home'),\n      children: \"Home\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 96,\n    columnNumber: 9\n  }, this);\n};\n_s(Logs, \"kYUPg+GCKFpw/kFKiJM1LVshRR0=\", false, function () {\n  return [useNavigate];\n});\n_c = Logs;\nexport default Logs;\nvar _c;\n$RefreshReg$(_c, \"Logs\");","map":{"version":3,"names":["React","useState","useEffect","axios","useNavigate","Bar","Chart","ChartJS","CategoryScale","LinearScale","BarElement","Title","Tooltip","Legend","jsxDEV","_jsxDEV","register","Logs","_s","navigate","logs","setLogs","chartData","setChartData","get","then","response","data","length","procesarDatos","catch","error","console","log","cantidadServidor1_info","cantidadServidor1_warn","cantidadServidor1_error","cantidadServidor2_info","cantidadServidor2_warn","cantidadServidor2_error","forEach","server","includes","status","labels","valoresInfo","valoresWarn","valoresError","datasets","label","backgroundColor","borderColor","borderWidth","className","style","marginTop","marginBottom","children","fileName","_jsxFileName","lineNumber","columnNumber","options","responsive","plugins","legend","position","type","onClick","_c","$RefreshReg$"],"sources":["C:/Seguridad/p-final/front/src/pages/Logs.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react'; \r\nimport axios from 'axios'; \r\nimport 'bootstrap/dist/css/bootstrap.min.css'; \r\nimport { useNavigate } from 'react-router-dom'; \r\nimport { Bar } from 'react-chartjs-2';\r\nimport { Chart as ChartJS, CategoryScale, LinearScale, BarElement, Title, Tooltip, Legend } from 'chart.js';\r\n\r\nChartJS.register(CategoryScale, LinearScale, BarElement, Title, Tooltip, Legend);\r\n\r\nconst Logs = () => {   \r\n    const navigate = useNavigate();\r\n    const [logs, setLogs] = useState([]);\r\n    const [chartData, setChartData] = useState(null);\r\n\r\n    useEffect(() => {\r\n        axios.get(\"http://localhost:5001/getServer\")\r\n            .then(response => {\r\n                if (response.data.logs && response.data.logs.length > 0) {\r\n                    setLogs(response.data.logs);\r\n                    procesarDatos(response.data.logs);\r\n                }\r\n            })\r\n            .catch(error => console.error(\"Error obteniendo logs: \", error));\r\n    }, []);\r\n\r\n    console.log(logs);\r\n\r\n    const procesarDatos = (logs) => {\r\n      // Contadores por servidor y categoría\r\n      let cantidadServidor1_info = 0;\r\n      let cantidadServidor1_warn = 0;\r\n      let cantidadServidor1_error = 0;\r\n  \r\n      let cantidadServidor2_info = 0;\r\n      let cantidadServidor2_warn = 0;\r\n      let cantidadServidor2_error = 0;\r\n  \r\n      // Filtramos y clasificamos los logs según su status\r\n      logs.forEach(log => {\r\n          if (log.server === \"1\" || log.server === 1) {\r\n              if ([200, 201, 204].includes(log.status)) cantidadServidor1_info++;\r\n              else if ([300, 301, 302].includes(log.status)) cantidadServidor1_warn++;\r\n              else if (log.status >= 400) cantidadServidor1_error++;\r\n          }\r\n          if (log.server === \"2\" || log.server === 2) {\r\n              if ([200, 201, 204].includes(log.status)) cantidadServidor2_info++;\r\n              else if ([300, 301, 302].includes(log.status)) cantidadServidor2_warn++;\r\n              else if (log.status >= 400) cantidadServidor2_error++;\r\n          }\r\n      });\r\n  \r\n      // Mostrar en consola\r\n      console.log(\"Logs Servidor 1 (info):\", cantidadServidor1_info);\r\n      console.log(\"Logs Servidor 1 (warn):\", cantidadServidor1_warn);\r\n      console.log(\"Logs Servidor 1 (error):\", cantidadServidor1_error);\r\n      console.log(\"Logs Servidor 2 (info):\", cantidadServidor2_info);\r\n      console.log(\"Logs Servidor 2 (warn):\", cantidadServidor2_warn);\r\n      console.log(\"Logs Servidor 2 (error):\", cantidadServidor2_error);\r\n  \r\n      // Configurar los datos de la gráfica\r\n      const labels = [\"Servidor 1\", \"Servidor 2\"];\r\n      const valoresInfo = [cantidadServidor1_info, cantidadServidor2_info];  // Logs info\r\n      const valoresWarn = [cantidadServidor1_warn, cantidadServidor2_warn];  // Logs warn\r\n      const valoresError = [cantidadServidor1_error, cantidadServidor2_error];  // Logs error\r\n  \r\n      setChartData({\r\n          labels,\r\n          datasets: [\r\n              {\r\n                  label: \"Éxito (info)\",\r\n                  data: valoresInfo,\r\n                  backgroundColor: \"rgba(54, 162, 235, 0.5)\", // Azul\r\n                  borderColor: \"rgba(54, 162, 235, 1)\",\r\n                  borderWidth: 1,\r\n              },\r\n              {\r\n                  label: \"Redirección (warn)\",\r\n                  data: valoresWarn,\r\n                  backgroundColor: \"rgba(255, 159, 64, 0.5)\", // Naranja\r\n                  borderColor: \"rgba(255, 159, 64, 1)\",\r\n                  borderWidth: 1,\r\n              },\r\n              {\r\n                  label: \"Errores (error)\",\r\n                  data: valoresError,\r\n                  backgroundColor: \"rgba(255, 99, 132, 0.5)\", // Rojo\r\n                  borderColor: \"rgba(255, 99, 132, 1)\",\r\n                  borderWidth: 1,\r\n              }\r\n          ]\r\n      });\r\n  };\r\n  \r\n\r\n    return (\r\n        <div className=\"container mt-4\" style={{marginTop: '50px', marginBottom: '60px'}}>\r\n            <h3 className=\"text-center\">Logs</h3> \r\n            <div className=\"card p-3\">\r\n                {chartData ? (\r\n                    <Bar \r\n                        data={chartData} \r\n                        options={{\r\n                            responsive: true, \r\n                            plugins: { \r\n                                legend: { position: 'top' } \r\n                            }\r\n                        }} \r\n                    />\r\n                ) : (\r\n                    <p>Cargando datos...</p>\r\n                )}\r\n            </div>\r\n\r\n            <button \r\n                className=\"btn btn-warning mt-3\"  \r\n                type=\"button\" \r\n                onClick={() => navigate('/home')}\r\n            >\r\n                Home\r\n            </button>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Logs;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}