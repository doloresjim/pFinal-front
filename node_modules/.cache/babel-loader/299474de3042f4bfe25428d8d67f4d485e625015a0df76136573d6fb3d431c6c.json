{"ast":null,"code":"var _jsxFileName = \"C:\\\\Seguridad\\\\p-final\\\\front\\\\src\\\\pages\\\\Logs.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport { useNavigate } from 'react-router-dom';\nimport { Bar } from 'react-chartjs-2';\nimport { Chart as ChartJS, CategoryScale, LinearScale, BarElement, Title, Tooltip, Legend } from 'chart.js';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nChartJS.register(CategoryScale, LinearScale, BarElement, Title, Tooltip, Legend);\nconst Logs = () => {\n  _s();\n  const navigate = useNavigate();\n  const [logs, setLogs] = useState([]);\n  const [chartData, setChartData] = useState(null);\n  const [responseTimeData, setResponseTimeData] = useState(null);\n  const [dateRangeData, setDateRangeData] = useState(null);\n  useEffect(() => {\n    axios.get(\"http://localhost:5001/getServer\").then(response => {\n      if (response.data.logs && response.data.logs.length > 0) {\n        setLogs(response.data.logs);\n        procesarDatos(response.data.logs);\n        procesarTiemposRespuesta(response.data.logs);\n      }\n    }).catch(error => console.error(\"Error obteniendo logs: \", error));\n  }, []);\n  const procesarDatos = logs => {\n    let cantidadServidor1_info = 0;\n    let cantidadServidor1_warn = 0;\n    let cantidadServidor1_error = 0;\n    let cantidadServidor2_info = 0;\n    let cantidadServidor2_warn = 0;\n    let cantidadServidor2_error = 0;\n    logs.forEach(log => {\n      if (log.server === 1) {\n        if ([200, 201, 204].includes(log.status)) cantidadServidor1_info++;else if ([300, 301, 302].includes(log.status)) cantidadServidor1_warn++;else if (log.status >= 400) cantidadServidor1_error++;\n      }\n      if (log.server === 2) {\n        if ([200, 201, 204].includes(log.status)) cantidadServidor2_info++;else if ([300, 301, 302].includes(log.status)) cantidadServidor2_warn++;else if (log.status >= 400) cantidadServidor2_error++;\n      }\n    });\n    const labels = [\"Servidor 1\", \"Servidor 2\"];\n    const valoresInfo = [cantidadServidor1_info, cantidadServidor2_info];\n    const valoresWarn = [cantidadServidor1_warn, cantidadServidor2_warn];\n    const valoresError = [cantidadServidor1_error, cantidadServidor2_error];\n    setChartData({\n      labels,\n      datasets: [{\n        label: \"Info\",\n        data: valoresInfo,\n        backgroundColor: \"rgba(54, 162, 235, 0.5)\",\n        borderColor: \"rgba(54, 162, 235, 1)\",\n        borderWidth: 1\n      }, {\n        label: \"Warn\",\n        data: valoresWarn,\n        backgroundColor: \"rgba(255, 159, 64, 0.5)\",\n        borderColor: \"rgba(255, 159, 64, 1)\",\n        borderWidth: 1\n      }, {\n        label: \"Error\",\n        data: valoresError,\n        backgroundColor: \"rgba(255, 99, 132, 0.5)\",\n        borderColor: \"rgba(255, 99, 132, 1)\",\n        borderWidth: 1\n      }]\n    });\n  };\n  const procesarTiemposRespuesta = logs => {\n    let servidor1_fast = 0;\n    let servidor1_medium = 0;\n    let servidor1_slow = 0;\n    let servidor2_fast = 0;\n    let servidor2_medium = 0;\n    let servidor2_slow = 0;\n    logs.forEach(log => {\n      if (log.server === 1) {\n        if (log.responseTime < 200) servidor1_fast++;else if (log.responseTime >= 200 && log.responseTime <= 500) servidor1_medium++;else servidor1_slow++;\n      }\n      if (log.server === 2) {\n        if (log.responseTime < 200) servidor2_fast++;else if (log.responseTime >= 200 && log.responseTime <= 500) servidor2_medium++;else servidor2_slow++;\n      }\n    });\n    const labels = [\"Servidor 1\", \"Servidor 2\"];\n    const fastData = [servidor1_fast, servidor2_fast];\n    const mediumData = [servidor1_medium, servidor2_medium];\n    const slowData = [servidor1_slow, servidor2_slow];\n    setResponseTimeData({\n      labels,\n      datasets: [{\n        label: \"Rápido (<200ms)\",\n        data: fastData,\n        backgroundColor: \"rgba(75, 192, 192, 0.5)\",\n        borderColor: \"rgba(75, 192, 192, 1)\",\n        borderWidth: 1\n      }, {\n        label: \"Medio (200-500ms)\",\n        data: mediumData,\n        backgroundColor: \"rgba(255, 205, 86, 0.5)\",\n        borderColor: \"rgba(255, 205, 86, 1)\",\n        borderWidth: 1\n      }, {\n        label: \"Lento (>500ms)\",\n        data: slowData,\n        backgroundColor: \"rgba(255, 99, 132, 0.5)\",\n        borderColor: \"rgba(255, 99, 132, 1)\",\n        borderWidth: 1\n      }]\n    });\n  };\n  const procesarDias = (logs, setDailyData) => {\n    const server1Days = {};\n    const server2Days = {};\n    logs.forEach(log => {\n      const date = new Date(log.timestamp).toISOString().split('T')[0]; // Obtener la fecha en formato YYYY-MM-DD\n\n      if (log.server === 1) {\n        server1Days[date] = (server1Days[date] || 0) + 1;\n      } else if (log.server === 2) {\n        server2Days[date] = (server2Days[date] || 0) + 1;\n      }\n    });\n\n    // Convertir los objetos a arrays para Chart.js\n    const allDates = [...new Set([...Object.keys(server1Days), ...Object.keys(server2Days)])].sort(); // Obtener todas las fechas únicas y ordenarlas\n\n    const server1Counts = allDates.map(date => server1Days[date] || 0);\n    const server2Counts = allDates.map(date => server2Days[date] || 0);\n    setDailyData({\n      labels: allDates,\n      datasets: [{\n        label: \"Servidor 1\",\n        data: server1Counts,\n        backgroundColor: \"rgba(54, 162, 235, 0.5)\",\n        borderColor: \"rgba(54, 162, 235, 1)\",\n        borderWidth: 1\n      }, {\n        label: \"Servidor 2\",\n        data: server2Counts,\n        backgroundColor: \"rgba(255, 99, 132, 0.5)\",\n        borderColor: \"rgba(255, 99, 132, 1)\",\n        borderWidth: 1\n      }]\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container mt-4\",\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      className: \"text-center\",\n      children: \"Logs\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 182,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"card p-3\",\n      children: chartData ? /*#__PURE__*/_jsxDEV(Bar, {\n        data: chartData,\n        options: {\n          responsive: true,\n          plugins: {\n            legend: {\n              position: 'top'\n            }\n          }\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 184,\n        columnNumber: 30\n      }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Cargando datos...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 184,\n        columnNumber: 130\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 183,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"card p-3 mt-4\",\n      children: responseTimeData ? /*#__PURE__*/_jsxDEV(Bar, {\n        data: responseTimeData,\n        options: {\n          responsive: true,\n          plugins: {\n            legend: {\n              position: 'top'\n            }\n          }\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 187,\n        columnNumber: 37\n      }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Cargando datos...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 187,\n        columnNumber: 144\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 186,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"card p-3 mt-4\",\n      children: procesarDias ? /*#__PURE__*/_jsxDEV(Bar, {\n        data: procesarDias,\n        options: {\n          responsive: true,\n          plugins: {\n            legend: {\n              position: 'top'\n            }\n          }\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 190,\n        columnNumber: 33\n      }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Cargando datos...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 190,\n        columnNumber: 136\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 189,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"text-center mt-3\",\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"btn btn-warning\",\n        onClick: () => navigate('/home'),\n        children: \"Ver Home\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 193,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 192,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 181,\n    columnNumber: 9\n  }, this);\n};\n_s(Logs, \"WpSi3ezjijJJ1w8YwLHZNqhLwbA=\", false, function () {\n  return [useNavigate];\n});\n_c = Logs;\nexport default Logs;\nvar _c;\n$RefreshReg$(_c, \"Logs\");","map":{"version":3,"names":["React","useState","useEffect","axios","useNavigate","Bar","Chart","ChartJS","CategoryScale","LinearScale","BarElement","Title","Tooltip","Legend","jsxDEV","_jsxDEV","register","Logs","_s","navigate","logs","setLogs","chartData","setChartData","responseTimeData","setResponseTimeData","dateRangeData","setDateRangeData","get","then","response","data","length","procesarDatos","procesarTiemposRespuesta","catch","error","console","cantidadServidor1_info","cantidadServidor1_warn","cantidadServidor1_error","cantidadServidor2_info","cantidadServidor2_warn","cantidadServidor2_error","forEach","log","server","includes","status","labels","valoresInfo","valoresWarn","valoresError","datasets","label","backgroundColor","borderColor","borderWidth","servidor1_fast","servidor1_medium","servidor1_slow","servidor2_fast","servidor2_medium","servidor2_slow","responseTime","fastData","mediumData","slowData","procesarDias","setDailyData","server1Days","server2Days","date","Date","timestamp","toISOString","split","allDates","Set","Object","keys","sort","server1Counts","map","server2Counts","className","children","fileName","_jsxFileName","lineNumber","columnNumber","options","responsive","plugins","legend","position","onClick","_c","$RefreshReg$"],"sources":["C:/Seguridad/p-final/front/src/pages/Logs.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react'; \r\nimport axios from 'axios'; \r\nimport 'bootstrap/dist/css/bootstrap.min.css'; \r\nimport { useNavigate } from 'react-router-dom'; \r\nimport { Bar } from 'react-chartjs-2';\r\nimport { Chart as ChartJS, CategoryScale, LinearScale, BarElement, Title, Tooltip, Legend } from 'chart.js';\r\n\r\nChartJS.register(CategoryScale, LinearScale, BarElement, Title, Tooltip, Legend);\r\n\r\nconst Logs = () => {   \r\n    const navigate = useNavigate();\r\n    const [logs, setLogs] = useState([]);\r\n    const [chartData, setChartData] = useState(null);\r\n    const [responseTimeData, setResponseTimeData] = useState(null);\r\n    const [dateRangeData, setDateRangeData] = useState(null);\r\n\r\n    useEffect(() => {\r\n        axios.get(\"http://localhost:5001/getServer\")\r\n            .then(response => {\r\n                if (response.data.logs && response.data.logs.length > 0) {\r\n                    setLogs(response.data.logs);\r\n                    procesarDatos(response.data.logs);\r\n                    procesarTiemposRespuesta(response.data.logs);\r\n                }\r\n            })\r\n            .catch(error => console.error(\"Error obteniendo logs: \", error));\r\n    }, []);\r\n\r\n    const procesarDatos = (logs) => {\r\n        let cantidadServidor1_info = 0;\r\n        let cantidadServidor1_warn = 0;\r\n        let cantidadServidor1_error = 0;\r\n    \r\n        let cantidadServidor2_info = 0;\r\n        let cantidadServidor2_warn = 0;\r\n        let cantidadServidor2_error = 0;\r\n    \r\n        logs.forEach(log => {\r\n            if (log.server === 1) {\r\n                if ([200, 201, 204].includes(log.status)) cantidadServidor1_info++;\r\n                else if ([300, 301, 302].includes(log.status)) cantidadServidor1_warn++;\r\n                else if (log.status >= 400) cantidadServidor1_error++;\r\n            }\r\n            if (log.server === 2) {\r\n                if ([200, 201, 204].includes(log.status)) cantidadServidor2_info++;\r\n                else if ([300, 301, 302].includes(log.status)) cantidadServidor2_warn++;\r\n                else if (log.status >= 400) cantidadServidor2_error++;\r\n            }\r\n        });\r\n    \r\n        const labels = [\"Servidor 1\", \"Servidor 2\"];\r\n        const valoresInfo = [cantidadServidor1_info, cantidadServidor2_info];  \r\n        const valoresWarn = [cantidadServidor1_warn, cantidadServidor2_warn];  \r\n        const valoresError = [cantidadServidor1_error, cantidadServidor2_error];  \r\n    \r\n        setChartData({\r\n            labels,\r\n            datasets: [\r\n                {\r\n                    label: \"Info\",\r\n                    data: valoresInfo,\r\n                    backgroundColor: \"rgba(54, 162, 235, 0.5)\", \r\n                    borderColor: \"rgba(54, 162, 235, 1)\",\r\n                    borderWidth: 1,\r\n                },\r\n                {\r\n                    label: \"Warn\",\r\n                    data: valoresWarn,\r\n                    backgroundColor: \"rgba(255, 159, 64, 0.5)\", \r\n                    borderColor: \"rgba(255, 159, 64, 1)\",\r\n                    borderWidth: 1,\r\n                },\r\n                {\r\n                    label: \"Error\",\r\n                    data: valoresError,\r\n                    backgroundColor: \"rgba(255, 99, 132, 0.5)\", \r\n                    borderColor: \"rgba(255, 99, 132, 1)\",\r\n                    borderWidth: 1,\r\n                }\r\n            ]\r\n        });\r\n    };\r\n\r\n    const procesarTiemposRespuesta = (logs) => {\r\n        let servidor1_fast = 0;\r\n        let servidor1_medium = 0;\r\n        let servidor1_slow = 0;\r\n    \r\n        let servidor2_fast = 0;\r\n        let servidor2_medium = 0;\r\n        let servidor2_slow = 0;\r\n    \r\n        logs.forEach(log => {\r\n            if (log.server === 1) {\r\n                if (log.responseTime < 200) servidor1_fast++;\r\n                else if (log.responseTime >= 200 && log.responseTime <= 500) servidor1_medium++;\r\n                else servidor1_slow++;\r\n            }\r\n            if (log.server === 2) {\r\n                if (log.responseTime < 200) servidor2_fast++;\r\n                else if (log.responseTime >= 200 && log.responseTime <= 500) servidor2_medium++;\r\n                else servidor2_slow++;\r\n            }\r\n        });\r\n    \r\n        const labels = [\"Servidor 1\", \"Servidor 2\"];\r\n        const fastData = [servidor1_fast, servidor2_fast];\r\n        const mediumData = [servidor1_medium, servidor2_medium];\r\n        const slowData = [servidor1_slow, servidor2_slow];\r\n    \r\n        setResponseTimeData({\r\n            labels,\r\n            datasets: [\r\n                {\r\n                    label: \"Rápido (<200ms)\",\r\n                    data: fastData,\r\n                    backgroundColor: \"rgba(75, 192, 192, 0.5)\", \r\n                    borderColor: \"rgba(75, 192, 192, 1)\",\r\n                    borderWidth: 1,\r\n                },\r\n                {\r\n                    label: \"Medio (200-500ms)\",\r\n                    data: mediumData,\r\n                    backgroundColor: \"rgba(255, 205, 86, 0.5)\", \r\n                    borderColor: \"rgba(255, 205, 86, 1)\",\r\n                    borderWidth: 1,\r\n                },\r\n                {\r\n                    label: \"Lento (>500ms)\",\r\n                    data: slowData,\r\n                    backgroundColor: \"rgba(255, 99, 132, 0.5)\", \r\n                    borderColor: \"rgba(255, 99, 132, 1)\",\r\n                    borderWidth: 1,\r\n                }\r\n            ]\r\n        });\r\n    };\r\n\r\n    const procesarDias = (logs, setDailyData) => {\r\n      const server1Days = {};\r\n      const server2Days = {};\r\n    \r\n      logs.forEach(log => {\r\n        const date = new Date(log.timestamp).toISOString().split('T')[0]; // Obtener la fecha en formato YYYY-MM-DD\r\n    \r\n        if (log.server === 1) {\r\n          server1Days[date] = (server1Days[date] || 0) + 1;\r\n        } else if (log.server === 2) {\r\n          server2Days[date] = (server2Days[date] || 0) + 1;\r\n        }\r\n      });\r\n    \r\n      // Convertir los objetos a arrays para Chart.js\r\n      const allDates = [...new Set([...Object.keys(server1Days), ...Object.keys(server2Days)])].sort(); // Obtener todas las fechas únicas y ordenarlas\r\n    \r\n      const server1Counts = allDates.map(date => server1Days[date] || 0);\r\n      const server2Counts = allDates.map(date => server2Days[date] || 0);\r\n    \r\n      setDailyData({\r\n        labels: allDates,\r\n        datasets: [\r\n          {\r\n            label: \"Servidor 1\",\r\n            data: server1Counts,\r\n            backgroundColor: \"rgba(54, 162, 235, 0.5)\",\r\n            borderColor: \"rgba(54, 162, 235, 1)\",\r\n            borderWidth: 1,\r\n          },\r\n          {\r\n            label: \"Servidor 2\",\r\n            data: server2Counts,\r\n            backgroundColor: \"rgba(255, 99, 132, 0.5)\",\r\n            borderColor: \"rgba(255, 99, 132, 1)\",\r\n            borderWidth: 1,\r\n          },\r\n        ],\r\n      });\r\n    };\r\n\r\n    return (\r\n        <div className=\"container mt-4\">\r\n            <h3 className=\"text-center\">Logs</h3> \r\n            <div className=\"card p-3\">\r\n                {chartData ? <Bar data={chartData} options={{ responsive: true, plugins: { legend: { position: 'top' } } }} /> : <p>Cargando datos...</p>}\r\n            </div>\r\n            <div className=\"card p-3 mt-4\">\r\n                {responseTimeData ? <Bar data={responseTimeData} options={{ responsive: true, plugins: { legend: { position: 'top' } } }} /> : <p>Cargando datos...</p>}\r\n            </div>\r\n            <div className=\"card p-3 mt-4\">\r\n                {procesarDias ? <Bar data={procesarDias} options={{ responsive: true, plugins: { legend: { position: 'top' } } }} /> : <p>Cargando datos...</p>}\r\n            </div>\r\n            <div className=\"text-center mt-3\">\r\n                <button className=\"btn btn-warning\" onClick={() => navigate('/home')}>Ver Home</button>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Logs;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}